{"ast":null,"code":"var _jsxFileName = \"/Users/jeeyounghan/Documents/modern-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useReducer, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport CreateUser from \"./CreateUser\";\nimport UserList from \"./UserList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log(\"Counting active users...\");\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: \"\",\n    email: \"\"\n  },\n  users: [{\n    id: 1,\n    username: \"Jeeyoung\",\n    email: \"jeeyoung.han82@gmail.com\",\n    active: true\n  }, {\n    id: 2,\n    username: \"Candice\",\n    email: \"candice@example.com\",\n    active: false\n  }, {\n    id: 3,\n    username: \"han\",\n    email: \"han@example.com\",\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE_INPUT\":\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: \"CHANGE_INPUT\",\n      name,\n      value\n    });\n  }, []);\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    const newUser = {\n      id: nextId.current,\n      username,\n      email\n    };\n    dispatch({\n      type: \"CREATE_USER\",\n      user: newUser\n    });\n    nextId.current += 1;\n  }, []);\n  const onRemove = useCallback(id => {\n    setUsers(prevUsers => prevUsers.filter(user => user.id !== id));\n  }, []);\n  const onToggle = useCallback(id => {\n    setUsers(prevUsers => prevUsers.map(user => user.id === id ? { ...user,\n      active: !user.active\n    } : user));\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Active User Number: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"6Q9Uuxs39mqwyYh6xesihEBHDKM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jeeyounghan/Documents/modern-react/src/App.js"],"names":["useCallback","useMemo","useReducer","useRef","useState","CreateUser","UserList","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","type","name","value","App","dispatch","onChange","e","target","nextId","onCreate","newUser","current","onRemove","setUsers","prevUsers","onToggle","map","count"],"mappings":"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","sourcesContent":["import { useCallback, useMemo, useReducer, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport CreateUser from \"./CreateUser\";\nimport UserList from \"./UserList\";\n\nfunction countActiveUsers(users) {\n  console.log(\"Counting active users...\");\n  return users.filter((user) => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: \"\",\n    email: \"\",\n  },\n  users: [\n    {\n      id: 1,\n      username: \"Jeeyoung\",\n      email: \"jeeyoung.han82@gmail.com\",\n      active: true,\n    },\n    {\n      id: 2,\n      username: \"Candice\",\n      email: \"candice@example.com\",\n      active: false,\n    },\n    {\n      id: 3,\n      username: \"han\",\n      email: \"han@example.com\",\n      active: false,\n    },\n  ],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE_INPUT\":\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.name]: action.value,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onChange = useCallback((e) => {\n    const { name, value } = e.target;\n    dispatch({\n      type: \"CHANGE_INPUT\",\n      name,\n      value,\n    });\n  }, []);\n\n  const nextId = useRef(4);\n\n  const onCreate = useCallback(() => {\n    const newUser = {\n      id: nextId.current,\n      username,\n      email,\n    };\n    dispatch({\n      type: \"CREATE_USER\",\n      user: newUser,\n    });\n    nextId.current += 1;\n  }, []);\n\n  const onRemove = useCallback((id) => {\n    setUsers((prevUsers) => prevUsers.filter((user) => user.id !== id));\n  }, []);\n\n  const onToggle = useCallback((id) => {\n    setUsers((prevUsers) =>\n      prevUsers.map((user) =>\n        user.id === id\n          ? {\n              ...user,\n              active: !user.active,\n            }\n          : user\n      )\n    );\n  }, []);\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n      <div>\n        <h1>Active User Number: {count}</h1>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}